<?php

namespace INTI\RegistroAcademicoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use INTI\RegistroAcademicoBundle\Entity\Especialidad;
use INTI\RegistroAcademicoBundle\Entity\CodigoEspecialidad;
use INTI\RegistroAcademicoBundle\Entity\Empleado;
use INTI\RegistroAcademicoBundle\Entity\Usuario;

/**
 * AlumnoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlumnoRepository extends EntityRepository {

    /**
     * Buscar alumnos por apellido
     * 
     * @param string $apellido
     * @return array
     */
    public function findByApellidos($apellidos, CodigoEspecialidad $codigo = null) {
        $qb = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('al')
                ->from('RegistroAcademicoBundle:Alumno', 'al')
                ->where('al.primerApellido LIKE :apellido')
                ->orWhere('al.segundoApellido LIKE :apellido')
                ->setParameter(':apellido', $apellidos);
        if($codigo != null)
            $qb->andWhere('al.codigoEspecialidad = :codigo')
            ->setParameter(':codigo', $codigo->getCodigo());
        return $qb->getQuery()->getResult();
    }

    /**
     * Buscar alumnos por apellido
     * 
     * @param string $apellido
     * @return array
     */
    public function findByApellido($apellidos) {
        $query = $this->getEntityManager()
                ->createQuery("SELECT al.nie, al.nombres, al.primerApellido, al.segundoApellido FROM RegistroAcademicoBundle:Alumno al WHERE al.primerApellido LIKE :apellido OR al.segundoApellido LIKE :apellido")
                ->setParameter(':apellido', $apellidos);
        return $query->getResult();
    }

    /**
     * Buscar alumnos por especialidad
     * 
     * @param \INTI\RegistroAcademicoBundle\Entity\Especialidad $especialidad
     * @return array
     */
    public function findByEspecialidad(Especialidad $especialidad) {
        $query = $this->getEntityManager()
                ->createQuery("SELECT al FROM RegistroAcademicoBundle:Alumno al WHERE al.especialidad = :especialidad")
                ->setParameter(':especialidad', $especialidad->getCodigo());
        return $query->getResult();
    }

    /**
     * Buscar alumnos por codigo de especialidad
     * @param  CodigoEspecialidad $codigo
     * @return array
     */
    public function findByCodigo(CodigoEspecialidad $codigo) {
        $query = $this->getEntityManager()
                ->createQuery("SELECT al FROM RegistroAcademicoBundle:Alumno al WHERE al.codigoEspecialidad = :codigo")
                ->setParameter(':codigo', $codigo->getCodigo());
        return $query->getResult();
    }
    /**
     * Buscar alumnos que esten bajo la responsabilidad del empleado
     * 
     * @param \INTI\RegistroAcademicoBundle\Entity\Empleado $empleado
     * @return array
     */
    public function findByResponsable(Empleado $empleado) {
        if ($empleado->getPuesto() == 'secretaria_reg_acad') {
            $query = $this->getEntityManager()
                    ->createQuery("SELECT al FROM RegistroAcademicoBundle:Alumno al WHERE al.especialidad IN (SELECT emp.responsabilidad FROM RegistroAcademicoBundle:Empleado emp WHERE emp.dui = :dui)")
                    ->setParameter(':dui', $empleado->getDui());
            return $query->getResult();
        } else {
            return $this->findAll();
        }
    }

    /**
     * Busca un alumno usuando su usuario
     *
     * @param  Usuario $usuario
     * @return \INTI\RegistroAcademicoBundle\Entity\Alumno
     */
    public function findByUsuario(Usuario $usuario)
    {
        $query = $this->getEntityManager()
                ->createQuery("SELECT al FROM RegistroAcademicoBundle:Alumno al WHERE al.usuario = :usuario")
                ->setParameter(':usuario', $usuario->getUsername());
        return $query->getResult();
    }
}
