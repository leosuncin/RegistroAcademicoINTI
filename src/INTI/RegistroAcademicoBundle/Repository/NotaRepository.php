<?php

namespace INTI\RegistroAcademicoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use INTI\RegistroAcademicoBundle\Entity\Alumno;
use INTI\RegistroAcademicoBundle\Entity\Anho;
use INTI\RegistroAcademicoBundle\Entity\CodigoEspecialidad;
use INTI\RegistroAcademicoBundle\Entity\Especialidad;
use INTI\RegistroAcademicoBundle\Entity\Materia;
use INTI\RegistroAcademicoBundle\Entity\Periodo;

/**
 * NotaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotaRepository extends EntityRepository {

	/**
	 * Buscar notas por materia agrupadas por periodo
	 *
	 * @param  \INTI\RegistroAcademicoBundle\Entity\Materia $materia
	 * @return array
	 */
	public function findByMateria(Materia $materia)
	{
		$query = $this->getEntityManager()
				->createQuery("SELECT n FROM RegistroAcademicoBundle:Nota n WHERE n.materia = :materia AND n.periodo IN (SELECT p.periodo FROM RegistroAcademicoBundle:Periodo p WHERE p.anho = anho_actual()) GROUP BY p.periodo")
				->setParameter(':materia', $materia->getId());
		return $query->getResult();
	}

	/**
	 * Buscar notas por periodos agrupadas por materia
	 *
	 * @param  \INTI\RegistroAcademicoBundle\Entity\Periodo $periodo
	 * @return array
	 */
	public function findByPeriodo(Periodo $periodo)
	{
		$query = $this->getEntityManager()
				->createQuery("SELECT n FROM RegistroAcademicoBundle:Nota n WHERE n.periodo = :periodo GROUP BY n.materia")
				->setParameter(':periodo', $periodo->getPeriodo());
		return $query->getResult();
	}

	/**
	 * Buscar notas por alumno agrupadas por periodo y ordenadas por materia
	 *
	 * @param  Alumno $alumno
	 * @return array
	 */
	public function findByAlumno(Alumno $alumno)
	{
		$query = $this->getEntityManager()
				->createQuery("SELECT n FROM RegistroAcademicoBundle:Nota n WHERE n.alumno = :alumno AND n.periodo IN (SELECT p.periodo FROM RegistroAcademicoBundle:Periodo p WHERE p.anho = anho_actual()) GROUP BY n.periodo ORDER BY n.materia")
				->setParameter(':alumno', $alumno->getNie());
		return $query->getResult();
	}

	/**
	 * Buscar notas por codigo de especialidad agrupadas por periodo y ordenadas por materia
	 * @param  CodigoEspecialidad $codigo
	 * @return array
	 */
	public function findByCodigoEspecialidad(CodigoEspecialidad $codigo)
	{
		$query = $this->getEntityManager()
				->createQuery("SELECT n FROM RegistroAcademicoBundle:Nota n WHERE n.alumno IN (SELECT al.nie FROM RegistroAcademicoBundle:Alumno al WHERE al.codigoEspecialidad = :codigo) AND n.periodo IN (SELECT p.periodo FROM RegistroAcademicoBundle:Periodo p WHERE p.anho = anho_actual()) GROUP BY n.periodo ORDER BY n.materia")
				->setParameter(':codigo', $codigo->getCodigo());
		return $query->getResult();
	}

	/**
	 * Buscar notas por especialidad agrupadas por periodo y ordenadas por materia
	 * 
	 * @param  Especialidad $especialidad
	 * @return array
	 */
	public function findByEspecialidad(Especialidad $especialidad)
	{
		$query = $this->getEntityManager()
				->createQuery("SELECT n FROM RegistroAcademicoBundle:Nota n WHERE n.alumno IN (SELECT al.nie FROM RegistroAcademicoBundle:Alumno al WHERE al.especialidad = :especialidad) AND n.periodo IN (SELECT p.periodo FROM RegistroAcademicoBundle:Periodo p WHERE p.anho = anho_actual()) GROUP BY n.periodo ORDER BY n.materia");
		return $query->getResult();
	}
}